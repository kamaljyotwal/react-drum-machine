{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["drumArray","soundBanner","keystroke","url","pianoArray","App","props","state","power","data","display","styletoggler","volume","displaytextLogicFunc","bind","powerOff","bankChange","volumeControl","clearDisplay","e","this","setState","target","value","setTimeout","theMainRenderingConst","map","eachElement","i","mainArray","audiosrc","buttonTitle","displayLabel","spanStyle","float","spanStyleforBank","toggleContainer","backgroundColor","transition","id","className","class","onClick","style","togglefunc","type","name","min","max","step","onChange","Component","Inner1","playSound","keyEventFunction","document","addEventListener","removeEventListener","soundSource","children","currentTime","play","key","toUpperCase","keydownbuttontitle","getElementById","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.360e90dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SCSS/App.css\";\n\nconst drumArray = [\n  {\n    soundBanner: \"Heater-1\",\n    keystroke: \"Q\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    soundBanner: \"Heater-2\",\n    keystroke: \"W\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    soundBanner: \"Heater-3\",\n    keystroke: \"E\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    soundBanner: \"Heater-4\",\n    keystroke: \"A\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    soundBanner: \"Clap\",\n    keystroke: \"S\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n  },\n\n  {\n    soundBanner: \"Open-HH\",\n    keystroke: \"D\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n  },\n\n  {\n    soundBanner: \"Kick-n'-Hat\",\n    keystroke: \"Z\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n\n  {\n    soundBanner: \"Kick\",\n    keystroke: \"X\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n\n  {\n    soundBanner: \"Closed-HH\",\n    keystroke: \"C\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n  },\n];\n\nconst pianoArray = [\n  {\n    keystroke: \"Q\",\n    soundBanner: \"Chord-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keystroke: \"W\",\n    soundBanner: \"Chord-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n  },\n  {\n    keystroke: \"E\",\n    soundBanner: \"Chord-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n  },\n  {\n    keystroke: \"A\",\n    soundBanner: \"Shaker\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n  },\n  {\n    keystroke: \"S\",\n    soundBanner: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keystroke: \"D\",\n    soundBanner: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keystroke: \"Z\",\n    soundBanner: \"Punchy-Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keystroke: \"X\",\n    soundBanner: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keystroke: \"C\",\n    soundBanner: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      data: drumArray,\n      display: \"\",\n      styletoggler: \"\",\n      volume: 0.4,\n    };\n\n    this.displaytextLogicFunc = this.displaytextLogicFunc.bind(this);\n    this.powerOff = this.powerOff.bind(this);\n    this.bankChange = this.bankChange.bind(this);\n    this.volumeControl = this.volumeControl.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n  }\n\n  // -------------------functions controlling the controller-right area--------------------------------\n  displaytextLogicFunc(e) {\n    this.setState({ display: e });\n  }\n\n  powerOff() {\n    this.setState({ power: !this.state.power, display: \"\" });\n  }\n\n  bankChange() {\n    if (this.state.power) {\n      if (this.state.data == drumArray) {\n        this.setState({ data: pianoArray, display: \"Piano Kit\" });\n      } else {\n        this.setState({\n          data: drumArray,\n          display: \"Drum Kit\",\n        });\n      }\n    }\n  }\n\n  clearDisplay() {\n    this.setState({ display: \"\" });\n  }\n\n  volumeControl(e) {\n    if (this.state.power) {\n      this.setState({\n        volume: e.target.value,\n        display: \"Volume:\" + \" \" + this.state.volume * 100,\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n  // --------------------------------------------------------------------------------------\n\n  render() {\n    const theMainRenderingConst = this.state.data.map((eachElement, i, mainArray) => {\n      return (\n        <Inner1\n          power={this.state.power}\n          audiosrc={eachElement.url}\n          buttonTitle={eachElement.keystroke}\n          displayLabel={eachElement.soundBanner}\n          displaytextLogicFunc={this.displaytextLogicFunc}\n          volume={this.state.volume}\n        />\n      );\n    });\n\n    // ------------------------conditional rendering of styles----------------------------------------\n    const spanStyle = {\n      float: \"left\",\n    };\n    const spanStyleforBank = {\n      float: \"left\",\n    };\n\n    const toggleContainer = {};\n\n    if (this.state.power) {\n      spanStyle.float = \"right\";\n      toggleContainer.backgroundColor = \"rgba(35, 77, 216, 0.726)\";\n      toggleContainer.transition = \"all 500ms linear\";\n    }\n\n    if (this.state.data == pianoArray) {\n      spanStyleforBank.float = \"right\";\n    }\n    if (this.state.data == drumArray) {\n      spanStyleforBank.float = \"left\";\n    }\n    // ------------------------------------------------------------------------------------\n\n    return (\n      <div id=\"display\">\n        <div id=\"drum-machine\">\n          <div className=\"appArea\">{theMainRenderingConst}</div>\n          <div className=\"displayArea\">\n            <div className=\"divContainingallControls\">\n              {/* toggler here */}\n              <p className=\"powerLabel\">power</p>\n              <div class=\"inner-container\" onClick={this.powerOff} style={toggleContainer}>\n                <span id=\"slider\" style={spanStyle} onClick={this.togglefunc}></span>\n              </div>\n              {/*-------*/}\n\n              {/* this is the  display screen */}\n              <div className=\"displayScreen\">{this.state.display}</div>\n\n              {/* volume slider */}\n              <input\n                type=\"range\"\n                name=\"range\"\n                id=\"rangeSlider\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                onChange={this.volumeControl}\n                value={this.state.volume}\n              />\n\n              {/* bank change toggler */}\n              <p className=\"bankLabel\">Bank</p>\n              <div class=\"inner-container\" onClick={this.bankChange}>\n                <span id=\"slider\" style={spanStyleforBank}></span>\n              </div>\n              {/* ------ */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n\nclass Inner1 extends Component {\n  constructor() {\n    super();\n\n    this.playSound = this.playSound.bind(this);\n    this.keyEventFunction = this.keyEventFunction.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyEventFunction);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyEventFunction);\n  }\n\n  playSound(e) {\n    if (this.props.power) {\n      var soundSource = e.target.children[0];\n      soundSource.currentTime = 0;\n      soundSource.play();\n      soundSource.volume = this.props.volume;\n      this.props.displaytextLogicFunc(this.props.displayLabel);\n    }\n  }\n  keyEventFunction(e) {\n    if (this.props.power) {\n      if (e.key.toUpperCase() === this.props.buttonTitle) {\n        const keydownbuttontitle = this.props.buttonTitle;\n        const buttonconst = document.getElementById(keydownbuttontitle);\n        buttonconst.play();\n        this.props.displaytextLogicFunc(this.props.displayLabel);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"drum-pad\" onClick={this.playSound} id={this.props.displayLabel}>\n          <audio src={this.props.audiosrc} className=\"clip\" id={this.props.buttonTitle} />\n          {this.props.buttonTitle}\n        </div>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}